#!/usr/local/bin/sbcl --script
;; -*- Mode: Lisp -*-

(format *terminal-io* "Loading...")
(force-output *terminal-io*)

(eval-when (:compile-toplevel :load-toplevel :execute)
  (let ((*standard-output* (make-broadcast-stream)))
    (require 'asdf)
    (require 'gotanda)))

(in-package :got)

(setf (symbol-function 'dispatch)
      (dlambda
       (:create (&optional body deadline)
                (let ((task (create-task :body body :deadline deadline)))
                  (format t "New Task: ~a~%" (get-body task))))
       (:list (&optional tag deadline)
              (dolist
                  (task
                    (list-task :tag tag
                               :deadline (and deadline
                                              (destructuring-bind (compare-fn datestr)
                                                  (cl-ppcre:split #\Space deadline)
                                                (list (intern compare-fn) (str->date datestr))))))
                (format t "~a: ~a~%" (get-id task) (get-body task))))
       (:edit (&optional index body deadline)
              (edit-task index :body body :deadline deadline))
       (t (&rest args) (declare (ignore args)) (format t "Undefined action~%"))))

(defun run-dispatch (args)
  (apply #'dispatch
         (intern (string-upcase (car args)) :KEYWORD)
         (cdr args)))

(format *terminal-io* "Done.~%")

(loop for input = (prompt-read ">")
     with clsql:*default-caching* = nil
     until (zerop (length input))
     do (run-dispatch (split-params input)))
